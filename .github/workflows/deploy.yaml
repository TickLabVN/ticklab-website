on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'

permissions:
  contents: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}
  DEVOPS_REPO: ${{ github.repository_owner }}/devops

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      APP_IMAGE: ${{ steps.set_image_name.outputs.APP_IMAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case repository name
        id: set_image_name
        run: |
          REPO_NAME_LOWER=$(echo "${{ env.REPO_NAME }}" | tr '[:upper:]' '[:lower:]')
          echo "APP_IMAGE=${{ env.REGISTRY }}/$REPO_NAME_LOWER" >> $GITHUB_OUTPUT

      - name: Build and push image for app
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.set_image_name.outputs.APP_IMAGE }}:latest
          build-args: |
            PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}
            NEXT_PUBLIC_SERVER_URL=${{ vars.NEXT_PUBLIC_SERVER_URL }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}

      - name: Build and push Docker image
        id: build_and_push
        env:
          APP_IMAGE: ${{ steps.set_image_name.outputs.APP_IMAGE }}
        run: |
          if [ ${{ github.ref_name }} == 'main' ]; then
            TAG_NAME=latest
          elif [ ${{ github.ref_name }} == 'staging' ]; then
            TAG_NAME=beta
          else
            printf "Invalid branch name: ${{ github.ref_name }}"
            exit 1
          fi

          docker build -t ${{ env.APP_IMAGE }}:$TAG_NAME \
            --build-arg PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }} \
            --build-arg NEXT_PUBLIC_SERVER_URL=${{ vars.NEXT_PUBLIC_SERVER_URL }} \
            --build-arg MONGODB_URI=${{ secrets.MONGODB_URI }} .
          docker push --all-tags $APP_IMAGE

